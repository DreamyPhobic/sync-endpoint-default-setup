security.server.secureChannelType=ANY_CHANNEL
security.server.channelType=ANY_CHANNEL

# currently supported options are activeDirectory and ldap
security.server.authenticationMethod=ldap

#
# Settings for both Active Directory (ldap) and LDAP Authentication
#
# Username and password for doing read-only queries.
# For activeDirectory, use username@domain
# For LDAP, use dn
security.server.ldapQueryUsername=cn=readonly,dc=example,dc=org
security.server.ldapQueryPassword=readonly
#
# Exclude Active Directory (ldap) and LDAP groups that don't begin with groupPrefix + space + ...
# For those that do, replace all punctuation and spaces with underscore and replace
# the groupPrefix with GROUP_ The resulting group membership will be propagated down
# to the device during a sync.
security.server.groupPrefix=default_prefix

#
# Settings for ActiveDirectory Domain Controller
# NOTE: the DC Url should ALWAYS be ldaps
# The bind authentication uses basic auth and therefore is not 
# secure unless a TLS channel is used (i.e., ldaps).
#
security.server.ldapDomainDClevel2=YOURLDAPDOMAIN2
security.server.ldapDomainDClevel1=YOURLDAPDOMAIN1
security.server.ldapDomain=${security.server.ldapDomainDClevel2}.${security.server.ldapDomainDClevel1}
security.server.ldapDomainControllerUrl=ldaps://${security.server.ldapDomainDClevel2}.${security.server.ldapDomainDClevel1}
security.server.ldapDomainDC=DC=${security.server.ldapDomainDClevel2},DC=${security.server.ldapDomainDClevel1}

#
# Settings for LDAP Authentication
#
# enter in this format ldaps://LDAP_ADDRESS:636/
security.server.ldapUrl=ldap://ldap-service:389
security.server.ldapBaseDn=dc=example,dc=org
security.server.ldapPooled=false
security.server.userSearchBase=ou=people
security.server.groupSearchBase=ou=${security.server.groupPrefix},ou=groups
security.server.groupRoleAttribute=cn
security.server.userFullnameAttribute=givenName
security.server.usernameAttribute=uid
# {0} is username entered during basic auth
security.server.userDnPattern=${security.server.usernameAttribute}={0},${security.server.userSearchBase}
# {0} is user dn, {1} is username, this filter is for searching groups that a user belongs to
security.server.memberOfGroupSearchFilter=(memberUid={1})
# {0} is groupPrefix, {1} is groupRoleAttribute, this filter is for searching all groups
security.server.serverGroupSearchFilter=(&(objectClass=posixGroup)({1}={0} *))

wink.handlersFactoryClass=org.opendatakit.aggregate.odktables.impl.api.wink.AppEngineHandlersFactory

# realm definition
# realmString -- what should be sent to users when BasicAuth or DigestAuth is done
security.server.realm.realmString=opendatakit.org ODK Sync Endpoint

sync.preference.appName=notdefault
sync.preference.anonymousTablesSync=true
sync.preference.anonymousAttachmentAccess=true
